spring:
#    h2:
#        console:
#            enabled: true
#            path: "/h2-console"

    datasource:
        url: jdbc:mysql://localhost:3306/blogbase?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
        username: root
        password: rootpass

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
        oauth2:
            client:
                registration:
                    google:
                        clientId: 321053110329-2c3qnlgfuifs1thqjk2v92pm60ehu1cb.apps.googleusercontent.com
                        clientSecret: 76woGT9BCygpJsjbvs54i3rz
                        redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
                        scope:
                            - email
                            - profile

app:
    auth:
        tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
        tokenExpirationMsec: 864000000
    oauth2:
        # After successfully authenticating with the OAuth2 Provider,
        # we'll be generating an auth token for the user and sending the token to the
        # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
        # We're not using cookies because they won't work well in mobile clients.
        authorizedRedirectUris:
            - http://localhost:3000/oauth2/redirect
